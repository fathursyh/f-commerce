---
import type { ProductType } from "src/models/productType";
import { actions } from "astro:actions";
import MainLayout from "src/layouts/MainLayout.astro";
import SearchBarProduct from "@/vue-components/products/SearchBarProduct.vue";
import PagePaginations from "@/vue-components/navigations/PagePaginations.vue";
Astro.response.headers.set("Netlify-Vary", "query=page");
Astro.response.headers.set("Cache-Control", "public, max-age=360, must-revalidate");
Astro.response.headers.set(
  "Netlify-CDN-Cache-Control", "public, durable, s-maxage=360, stale-while-revalidate=60480"
);

const search = Astro.url.searchParams.get('search');
const page = Astro.url.searchParams.get('page') ?? "1";
const {data} = await Astro.callAction(actions.product.getAllProduct, {query: search, page: page});
---

<MainLayout>
    <div class="min-h-[82vh] py-10 xl:px-10 2xl:px-20">
        <div class="xl:w-[40%] w-[80%] mx-auto mb-20">
            <SearchBarProduct client:idle initial={search} suggestion={(data![0] as ProductType[]).map(object=>object.title)} class:list={['mx-auto']} />
        </div>
        <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 2xl:grid-cols-5 place-items-center gap-y-12">
            {
                data!.length > 0 &&
                (data![0] as ProductType[]).map((item) => (
                    <p>{item}</p>
                ))
            }
            
        </section>
        {
            data!.length < 1 &&
            <div class="grid place-items-center h-[50vh]">
                <p class="text-center text-base-content/70">Tidak ada produk</p>   
            </div>
        }
        {
            data &&
            <PagePaginations client:visible page={parseInt(page)} count={Math.ceil(data![1] as number / 15)} class:list={['mt-14']} />
        }
    </div>
</MainLayout>
